@* @model IEnumerable<CollegeWebApplication.Models.Student> *@
    @model CollegeWebApplication.Models.StudentGroupViewModel
    @using X.PagedList.Mvc
    @using System.Web

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-... (the actual integrity hash)" crossorigin="anonymous" />


@{
    ViewData["Title"] = "Index";
}

<h1>Students</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<form asp-controller="Students" asp-action="Index" method="get">
    <p>
        <select asp-for="StudentGroup" asp-items="Model.Groups">
            <option value="">All</option>
        </select>
        Surname: <input type="text" name="SearchString" />
        <input type="submit" value="Search" />
    </p>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">@Html.DisplayNameFor(model => model.Students![0].NameStudent)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SurnameSortParam"]">@Html.DisplayNameFor(model => model.Students![0].SurnameStudent)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["YearSortParam"]">@Html.DisplayNameFor(model => model.Students![0].YearOfStudy)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students![0].IdGroupNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Students!) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NameStudent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SurnameStudent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearOfStudy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdGroupNavigation.NameGroup)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.IdStudent"><i class="fas fa-edit"></i></a> |
                    <a asp-action="Details" asp-route-id="@item.IdStudent"><i class="fas fa-info-circle"></i></a> |
                    <a asp-action="Delete" asp-route-id="@item.IdStudent"><i class="fas fa-trash-alt"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.Students.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.Students.PageNumber - 1, studentGroup = Model.StudentGroup, searchString = Model.SearchString })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }
        @for (var i = 1; i <= Model.Students.PageCount; i++)
        {
            <li class="page-item @(i == Model.Students.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, studentGroup = Model.StudentGroup, searchString = Model.SearchString })">@i</a>
            </li>
        }
        @if (Model.Students.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.Students.PageNumber + 1, studentGroup = Model.StudentGroup, searchString = Model.SearchString })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        }
    </ul>
</nav>
